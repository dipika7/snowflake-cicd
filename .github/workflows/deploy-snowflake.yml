name: Snowflake CI/CD Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:
    inputs:
      AWS_ACCOUNT_NUMBER:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      DEPLOYMENT_ENV: ${{ github.ref_name }}
      SNOWSQL_VERSION: 1.3.2  # You can update this as needed

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_NUMBER }}:role/asset-github-actions-${{ env.DEPLOYMENT_ENV }}
          role-session-name: GithubActions

      # Step 3: Install jq
      - name: Install jq
        run: sudo apt-get install -y jq

      # Step 4: Install SnowSQL CLI
      - name: Install SnowSQL
        run: |
          curl -o snowsql_install.bash \
            https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/${SNOWSQL_VERSION}/linux_x86_64/snowsql-${SNOWSQL_VERSION}-linux_x86_64.bash
          chmod +x snowsql_install.bash
          yes | ./snowsql_install.bash

      # Step 5: Verify SnowSQL Installation
      - name: Verify SnowSQL
        run: |
          /home/runner/.snowsql/${SNOWSQL_VERSION}/snowsql --version

      # Step 6: Load Snowflake Credentials from AWS Secrets Manager
      - name: Load Snowflake Credentials
        id: load-creds
        run: |
          SECRET_NAME="snowflake-${DEPLOYMENT_ENV}-credentials"  # Adjust your secret naming here
          SNOWFLAKE_SECRET=$(aws secretsmanager get-secret-value \
            --secret-id "$SECRET_NAME" \
            --query SecretString \
            --output text)

          echo "SNOWSQL_ACCOUNT=$(echo "$SNOWFLAKE_SECRET" | jq -r '.account')" >> $GITHUB_ENV
          echo "SNOWSQL_USER=$(echo "$SNOWFLAKE_SECRET" | jq -r '.user')" >> $GITHUB_ENV
          echo "SNOWSQL_PWD=$(echo "$SNOWFLAKE_SECRET" | jq -r '.password')" >> $GITHUB_ENV
          echo "SNOWSQL_DATABASE=$(echo "$SNOWFLAKE_SECRET" | jq -r '.database')" >> $GITHUB_ENV
          echo "SNOWSQL_WAREHOUSE=$(echo "$SNOWFLAKE_SECRET" | jq -r '.warehouse')" >> $GITHUB_ENV
          echo "SNOWSQL_ROLE=$(echo "$SNOWFLAKE_SECRET" | jq -r '.role')" >> $GITHUB_ENV
          echo "SNOWSQL_SCHEMA=$(echo "$SNOWFLAKE_SECRET" | jq -r '.schema')" >> $GITHUB_ENV

      # Step 7: Deploy SQL Scripts to Snowflake
      - name: Deploy SQL Scripts to Snowflake
        run: |
          DEPLOY_DIR="sql/${DEPLOYMENT_ENV}"
          echo "Deploying .sql files from $DEPLOY_DIR"

          for file in $DEPLOY_DIR/*.sql; do
            echo "Running $file"
            /home/runner/.snowsql/${SNOWSQL_VERSION}/snowsql \
              -a "$SNOWSQL_ACCOUNT" \
              -u "$SNOWSQL_USER" \
              -p "$SNOWSQL_PWD" \
              -r "$SNOWSQL_ROLE" \
              -w "$SNOWSQL_WAREHOUSE" \
              -d "$SNOWSQL_DATABASE" \
              -s "$SNOWSQL_SCHEMA" \
              -f "$file" \
              -o log_level=INFO
          done
